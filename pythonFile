#############################################################################################

# This block is for connection of the database to the python
import sqlite3
from sqlite3 import Error

def dbConnection(dbFile):
    """ Creating a database connection to the SQLite database specified by the dbFile
    :param db_file: database file
    :return: Connection object or None
    """
    conn = None
    try:
        conn = sqlite3.connect(dbFile)
    except Error as e:
        print(e)
 
    return conn
    
  ################################################################################################
 
 # This block is for select option
def selectOption1(conn):
    """
    1. How many cycles are faulty?
    """
    cur = conn.cursor()
    c = cur.execute("""SELECT COUNT(*) FROM DamagedCycle;\n""")
    for q in c:
        print(q[0], " Cycles were faulty till date.") 
        
        
##################################################################################################      


# This block is for select option
def selectOption2(conn):
    """
    2. How many cycles are available?
    """
    cur = conn.cursor()
    c = cur.execute("""SELECT COUNT(*) FROM Bicycle WHERE Available = "Y"; \n""")
    for q in c:
        print(q[0], " Cycles are available.") 
        
#####################################################################################################

# This block is for select option
def selectOption3(conn):
    """
    3. What are the charges of the specific cycle?
    """
    cur = conn.cursor()
    cur.execute("""SELECT DISTINCT CostPerDay,CycleTypeName FROM Bicycle; \n""")
 
    rows = cur.fetchall()
    print("Cost \t Type")
    for row in rows:
        print(row[0],"\t",row[1])
        
#####################################################################################################

# This block is for select option
def selectOption4(conn):
    """
    4. What is the total number of customers who booked cycles with a discount?
    """
    cur = conn.cursor()
    cur.execute("""SELECT COUNT(*) FROM BorrowerWithAll WHERE DisCodeNo IS NOT NULL; \n""")
 
    rows = cur.fetchall()
 
    for row in rows:
        print(row[0], " Customers used Discount till date.")
        
#######################################################################################################

# This block is for select option
def selectOption5(conn):
    """
    5. Which types of cycles are rented most?
    """
    cur = conn.cursor()
    cur.execute("""SELECT CycleTypeName, count(CycleTypeName) FROM BorrowerWithAll JOIN Bicycle 
                    WHERE BorrowerWithAll.RegIdNo = Bicycle.RegNum 
                    GROUP BY CycleTypeName 
                    ORDER BY count(CycleTypeName) DESC; \n""")
 
    rows = cur.fetchall()
    print("Cycle Type \t How much times its is being used")
    for row in rows:
        print(row[0],"\t",row[1])
        
        
##############################################################################################################


# This block is for select option
def selectOption6(conn):
    """
    6. Which Employee repaired the damaged cycle?
    """
    cur = conn.cursor()
    cur.execute("""SELECT FirstName,LastName From Employee 
                    JOIN EmployeeDamagedCycle 
                    WHERE Employee.EmpId = EmployeeDamagedCycle.EmpIdent; \n""")
 
    rows = cur.fetchall()
    print("Below are the list of Employee who has repaired cycles.\n")
    print("Name of Employee")
    for row in rows:
        print(row[0]," ",row[1])
        
####################################################################################################################


# This block is for select option
def selectOption7(conn):
    """
    7. In what time damaged cycle is again available to rent? (Time is taken to repair the cycle)?
    """
    cur = conn.cursor()
    cur.execute("""SELECT ((AVG(strftime('%s',RepairDate) - strftime('%s',DamagedDate))/60)|| ' Mins') FROM DamagedCycle; \n""")
 
    rows = cur.fetchall()
 
    for row in rows:
        print("the Average time is ",row[0])


#######################################################################################################################

# This block is for select option
def selectOption8(conn):
    """
    8. What is the total income on the basis of the cycle rental?
    """
    cur = conn.cursor()
    cur.execute("""SELECT SUM(AmountOfCycle) FROM Billing; \n""")
 
    rows = cur.fetchall()
 
    for row in rows:
        print("The total income of Cycle rental is ",row[0])
        
  #######################################################################################################################
  
  
  # This block is for select option
def selectOption9(conn):
    """
    9. What s the total income on the basis of gears rental?
    """
    cur = conn.cursor()
    cur.execute("""SELECT SUM(AmountOfGear) FROM Billing; \n""")
 
    rows = cur.fetchall()
 
    for row in rows:
        print("The total income of Gear rental is",row[0])
  
  
  #######################################################################################################################
  
  
  # This block is for select option
def selectOption10(conn):
    """
    10. What is the total cost incurred on the damaged cycles?
    """
    cur = conn.cursor()
    cur.execute("""SELECT SUM(IncurredCost ) FROM DamagedCycle; \n""")
 
    rows = cur.fetchall()
 
    for row in rows:
        print("Total damaged cost incurred is ",row[0])
  
  
  #######################################################################################################################
  
  
  # This block is for select option
def selectOption11(conn):
    """
    11. What is the income on the cycle which were rented without a discount?
    """
    cur = conn.cursor()
    cur.execute("""SELECT SUM(SubTotAmount - DiscAmount) FROM Billing; \n""")
 
    rows = cur.fetchall()
 
    for row in rows:
        print("After subtracting  discount, the total income would be ",row[0])
  
  
  #######################################################################################################################
  
  
  # This block is for Adding a new record in the database
def selectAddOption1(conn):
    """
    1. Add a new Cycle Record in the Bicycle Table.

    """
    a = 1
    while a == 1:

        RegNum = input("Enter RegNum which is written on the cycle: ")
        CycleBrand = input("Enter CycleBrand: ")
        Available = input("Enter Available: (Y for Available and N for not Available) :")
        DateOfPurchase = input("Enter Date Of Purchase of Bicycle in YYYY-MM-DD hh:mm:ss date and time format : ")
        CycleTypeName = input("Enter CycleType: ")
        CostPerDay = input("Enter CostPerDay: ")

        cur = conn.cursor()
        cur.execute("INSERT INTO Bicycle(RegNum,CycleBrand,Available,DateOfPurchase,CycleTypeName,CostPerDay) values (?, ?, ?, ?, ?, ?)", 
                    (RegNum, CycleBrand, Available, DateOfPurchase, CycleTypeName, CostPerDay))
        
        print("""\n Below is the info for the current cycles in the store""")
        cur.execute("""SELECT * FROM Bicycle; \n""")
        
        rows = cur.fetchall()
        print("""\n RegNum, Brand, Available, Purchase Date, Type, Cost/Day""")
        for row in rows:
            print(row[0],row[1],row[2],row[3],row[4],row[5])
        
        a = input("Want to add next bicycle? \n(press 1 - for YES or press 0 - for NO) \n ")
        print("If you want to exit for SURE, then please press 0, else 1")
  
  
  #######################################################################################################################
  
  
  # This block is for Adding new record in the database
def selectAddOption2(conn):
    """
    2. Add new Gear Record in gear table.
    """
    a = 1
    while a == 1:

        GName = input("Enter Gear Name: ")
        GCompany = input("Enter Gear Brand Name: ")
        GCostPerDay = input("Enter CostPerDay of gear: ")
        GLateFeesPerHour = input("Enter late fees per hour of gear in percentage: ")

        cur = conn.cursor()
        cur.execute("INSERT INTO Gear(GName,GCostPerDay,GLateFeesPerHour,GCompany) values (?, ?, ?, ?)", 
                    (GName, GCostPerDay, GLateFeesPerHour, GCompany))

        print("""\n Below is the info for the current Gears in the store""")
        cur.execute("""SELECT * FROM Gear; \n""")
        
        rows = cur.fetchall()
        print("""\n ID, Name, Cost/Day, LateFees/Hr, Brand""")
        for row in rows:
            print(row[0],row[1],row[2],row[3],row[4])        
        
        a = input("Want to add next Gear? \n(press 1 - for YES or press 0 - for NO) \n  ")
        print("If you want to exit for SURE, then please press 0, else 1")
  
  
  #######################################################################################################################
  
  
  # This block is for Adding new record in the database
def selectAddOption3(conn):
    """
    3. Add new Discount Code:
    """
    a = 1
    while a == 1:

        DisCode = input("Enter Discount Code: ")
        DisPercent = input("Enter Percentage of Discount for the entered code: ")
        DisExpireDate = input("Enter Date Of Expiration of Discount in YYYY-MM-DD hh:mm:ss date and time format: ")

        cur = conn.cursor()
        cur.execute("INSERT INTO Discount(DisCode,DisPercent,DisExpireDate) values (?, ?, ?)", 
                    (DisCode,DisPercent,DisExpireDate))
        
        print("""\n Below is the info for the Discount provided till date in the store""")
        cur.execute("""SELECT * FROM Discount; \n""")
        
        rows = cur.fetchall()
        print("""\n Code, Percentage, Expire Date""")
        for row in rows:
            print(row[0],row[1],row[2]) 
            
        a = input("Want to add next Discount? \n(press 1 - for YES or press 0 - for NO) \n  ")
        print("If you want to exit for SURE, then please press 0, else 1")
  
  
  #######################################################################################################################
  
  
  # This block is for Edit/Update new record in the database
def selectUpdateOption1(conn):
    """
    1. Update Employee Contact Number/Address:
    """
    a = 1
    while a == 1:
        
        print("""\n Update the employee Primary Contact, Secondary Contact and Address:
        
        A. Type A for update of Primary Contact number.
        B. Type B for an update of Secondary Contact Number.
        C. Type C for Update of Address.
        """)
        b = input()
        if b == "A":
            RefEmpId = input("Please Enter the reference Employee ID: ")
            cur = conn.cursor()
            cur.execute("SELECT EXISTS(SELECT 1 FROM Employee WHERE EmpId=? LIMIT 1);", [RefEmpId])
            fet = cur.fetchall()
            for f in fet:
                if f[0] == 1:
                    
                    PriNo = input("Enter New Primary contact Number: ")
                    cur = conn.cursor()
                    cur.execute("UPDATE Employee SET PriContactNum = ? WHERE EmpId = ?;",(PriNo,RefEmpId))
                else:
                    print("This is not valid employee id")
        elif b == "B":
            
            RefEmpId = input("Please Enter the reference Employee ID: ")

            cur = conn.cursor()
            cur.execute("SELECT EXISTS(SELECT 1 FROM Employee WHERE EmpId=? LIMIT 1);", [RefEmpId])
            fet = cur.fetchall()
            for f in fet:
                if f[0] == 1:
                    SecNo = input("Enter New Secondary contact Number: ")
                    cur = conn.cursor()
                    cur.execute("UPDATE Employee SET SecContactNum = ? WHERE EmpId = ?;",(SecNo,RefEmpId))
                else:
                    print("This is not valid employee id")
                
        elif b == "C":
            print(""" \n To update address, you have 5 fields to update, which are:
            "Address": this is for line1, in which you have to include, house number/flat number + building name with space.
            "Street": New Street name for th new address
            "City": New City Name
            "PinCode": New Pincode of area
            "Provience": for new address
            """)
            RefEmpId = input("Please Enter the reference Employee ID: ")
            cur = conn.cursor()
            cur.execute("SELECT EXISTS(SELECT 1 FROM Employee WHERE EmpId=? LIMIT 1);", [RefEmpId])
            fet = cur.fetchall()            
            for f in fet:
                if f[0] == 1:
                    Add = input("Enter New Adress: ")
                    ST = input("Enter New Street Name: ")
                    CT = input("Enter New City: ")
                    PC = input("Enter New PinCode: ")
                    Pro = input("Enter New Provience/State: ")


                    cur = conn.cursor()
                    cur.execute("UPDATE Employee SET Address = ?,Street = ?, City = ?, PinCode = ?, Provience = ? WHERE EmpId = ?;",(Add,ST,CT, PC, Pro,RefEmpId))

                else:
                    print("This is not valid employee id")    
        a = input("""
                    Want to Update more?
                    Type 1 for YES.
                    Type 0 for NO and to go Main menu.
                    )""")
        print("If you want to exit for SURE, then please press 0, else 1")
  
  
  #######################################################################################################################
  
  
  # This block is for DELETING record from the database.
def selectDeleteOption1(conn):
    """
    1. Delete Record, (Deleting gears which has broken or been lost):
    """
    count = 0;
    a = 1
    while a == 1:

        GID = input("Please Enter Gear Id, which needs to deletes: ")
        cur = conn.cursor()
        cur.execute("SELECT EXISTS(SELECT 1 FROM Gear WHERE GearId=? LIMIT 1);", [GID])
        rows = cur.fetchall()
        for row in rows:
            if row[0] == 1:
                cur.execute("DELETE FROM Gear WHERE GearId = ?;", [GID])
                cur.execute("DELETE FROM sqlite_sequence WHERE name='Gear';")

                print(""" \n Item is Deleted from the databse, Current Gears which you have are given below with its details:\n\n""")
                print("""\nGear Id,Gear Name,Cost Per Day,Latefees,Brand""")
                cur.execute("""SELECT * FROM Gear; \n""")
                rows = cur.fetchall()
                for row in rows:
                    print(row[0],row[1],row[2],row[3], row[4])
            else:
                print("""\n This is not valid ID of the gear \n""")
                break
                
        a = input("Want to delete more gears?\n (press 1 - for YES or press 0 - for NO)\n")
        print("If you want to exit for SURE, then please press 0, else 1")

    print("please press 0 to go to the previous menu, else 1 to delete gears")          
  
  
  #######################################################################################################################
  
  
  #Main function block here.
i = 1
j = 1
def main():
    DB = r"BicycleRental.db"
 
    # create a DB connection
    conn = dbConnection(DB)
    with conn:
        print(""" \n Welcome to the BiCycle Rental DB application: \n""")
        while j == 1: 
            print("""\n
           Please select one of the option:


            A. For Search Select A:
            B. For Add records in the database, Select B:
            C. For Edit/Update the current records0 in Database, Select C:
            D. For Delete Record from the database, Select D:
            E. For Exit, Select E:
            \n""")
#-----------------------------------This section is just for select queries:----------------------------------------------
            y = input()
            if y == "A":
                print("""\n Select one from the below option for the search:

                1. How many cycles are faulty?
                2. How many cycles are available?
                3. What are the charges of the specific cycle?
                4. What is the total number of customers who booked cycles with a discount?
                5. Which types of cycles are rented most?
                6. Which Employee repaired the damaged cycle?
                7. In what time damaged cycle is again available to rent? (Time is taken to repair the cycle)
                8. What is the total income on the basis of the cycle rental?
                9. What s the total income on the basis of gears rental?
                10. What is the total cost incurred on the damaged cycles?
                11. What is the income on the cycle which were rented without a discount?
                0. Go Back, Select 0

                \n""")

                while i == 1:    
                    x = input()
                    if x == '1':
                        print("\n1. How many cycles are faulty?")
                        selectOption1(conn)

                    elif x == '2':
                        print("\n2. How many cycles are available?")
                        selectOption2(conn)

                    elif x == '3':
                        print("\n3. What are the charges of the specific cycle?")
                        selectOption3(conn)

                    elif x == '4':
                        print("\n4. What is the total number of customers who booked cycles with a discount?")
                        selectOption4(conn)

                    elif x == '5':
                        print("\n5. Which types of cycles are rented most?")
                        selectOption5(conn)

                    elif x == '6':
                        print("\n6. Which Employee repaired the damaged cycle?")
                        selectOption6(conn)

                    elif x == '7':
                        print("\n7. In what time damaged cycle is again available to rent?(Time taken to repare the cycle)")
                        selectOption7(conn)

                    elif x == '8':
                        print("\n8. What is the total income on the basis of the cycle rental?")
                        selectOption8(conn)

                    elif x == '9':
                        print("\n9. What s the total income on the basis of gears rental?")
                        selectOption9(conn)

                    elif x == '10':
                        print("\n10. What is the total cost incurred on the damaged cycles?")
                        selectOption10(conn)

                    elif x == '11':
                        print("\n11. What is the income on the cycle which were rented without a discount?")
                        selectOption11(conn)

                    elif x == '0':
                        print("\n0. Going to Main menu")
                        break
                        
                    elif x != '0' or "1" or "2" or "3" or "4" or "5" or "6" or "7" or "8" or "9" or "10" or "11":
                        print("\nPlease Enter the Valid option\n")                          

# ------------------------- this section is for Adding new record to the Table of the DB--------------------------------------
            
            elif y == "B":
                print("""\n Select one from the below option to Add record in the table:

                1. Add new Cycle Record in the database. 
                2. Add new Gear Record in the database:
                3. Add new Discount Code in the database:
                0. Go Back, Select 0

                \n""")
                
                while i == 1:    
                    x = input()
                    if x == '1':
                        print("\n1. Add new Cycle Record in the Bicycle Table.")
                        selectAddOption1(conn)

                    elif x == '2':
                        print("\n2. Add new Gear Record in gear table.")
                        selectAddOption2(conn)

                    elif x == '3':
                        print("\n3. Add new Discount Code in the database.")
                        selectAddOption3(conn)                        
                        
                    elif x == '0':
                        print("\n0. Going to Main menu")
                        break                        

                    elif x != '0' or "1" or "2" or "3":
                        print("\nPlease Enter the Valid option\n")  
                        
# ------------------------- this section is for Edit/Update record of the Tables of the DB--------------------------------------
                
            elif y == "C":
                print("""\n Select one from the below option for the Update from the table:

                1. Update Employee Contact Number/Address:             
                0. Go Back, Select 0

                \n""")
                
                while i == 1:    
                    x = input()
                    if x == '1':
                        print("\n1. ")
                        selectUpdateOption1(conn)


                    elif x == '0':
                        print("\n0. Going to Main menu")
                        break                        

                    elif x != '0' or "1":
                        print("\nPlease Enter the Valid option\n")                          
                        
# ------------------------- this section is for DELETE record of the Tables of the DB--------------------------------------
                        
            elif y == "D":
                print("""\n Select one from the below option for the DELETE record from the table:

                1. Delete Record, (Deleting gears which has broken or been lost)?                 
                0. Go Back, Select 0

                \n""")
                
                while i == 1:    
                    x = input()
                    if x == '1':
                        print("\n1.  Delete Record, (Deleting gears which are broken/lost)")
                        selectDeleteOption1(conn)

                    elif x == '0':
                        print("\n0. Going to Main menu")
                        break     
                        
                    elif x != '0' or "1":
                        print("\nPlease Enter the Valid option\n")                         

# ------------------------- this section is for For EXIT from the application--------------------------------------

            elif y == "E":
                print("""\nThank you for usng Cycle Rental Database appication. \n Have a good Day\n""")
                break
                

            elif y != "E" or "A" or "B" or "C" or "D":
                print("""\nPlease Enter the Valid option\n""")            
if __name__ == '__main__':
    main()
  
  
  #######################################################################################################################
 
